# export BOOST_DIR=/opt/local
# export HPX_DIR=$HOME/hpx-clang33
# export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$BOOST_DIR/lib:$HPX_DIR/lib/hpx

CC  = env OMPI_CC=clang-mp-3.3 openmpicc
CXX = env OMPI_CXX=clang++-mp-3.3 openmpic++
FC  = env OMPI_FC=dragonegg-3.3-gfortran-mp-4.8 openmpif90

# -DRPC_DISABLE_CALL_SHORTCUT
CPPFLAGS = \
	-I/Users/eschnett/hpx-clang33/include/hpx/external -I/Users/eschnett/hpx-clang33/include \
	-DHPX_LIMIT=6 \
	-I/opt/local/include \
	-DBOOST_MPI_HOMOGENEOUS \
	-I/Users/eschnett/qthread-1.10-clang33/include \
	-DRPC_QTHREADS \
	-DBLAS
CFLAGS   = -g -Wall -Wno-deprecated-declarations -std=c99   -march=native # -Ofast
CXXFLAGS = -g -Wall -Wno-deprecated-declarations -std=c++11 -march=native # -Ofast
# -fplugin-arg-llvm33gcc48-llvm-option=-mtriple:x86_64-apple-macosx10.9.0 -fplugin-arg-llvm33gcc48-enable-gcc-optzns
FFLAGS   = -g -Wall                                         -march=native # -Ofast

LDFLAGS  = \
	-L/Users/eschnett/hpx-clang33/lib/hpx -Wl,-rpath,/Users/eschnett/hpx-clang33/lib/hpx \
	-L/opt/local/lib \
	-L/Users/eschnett/qthread-1.10-clang33/lib \
	-L/opt/local/lib/gcc48
LIBS     = \
	-lhpxd -lhpx_initd -lhpx_serializationd \
	-lboost_date_time-mt -lboost_filesystem-mt -lboost_program_options-mt -lboost_regex-mt -lboost_serialization-mt -lboost_system-mt -lboost_thread-mt -lboost_atomic-mt -lboost_chrono-mt -lboost_context-mt \
	-lboost_mpi-mt -lboost_serialization-mt \
	-lqthread \
	-lgfortran



EXES = bench demo matbench mattest qthread_test hpx_test

BLAS_SRCS    = daxpy.f dcopy.f dgemm.f dgemv.f dnrm2.f dscal.f lsame.f xerbla.f
QTHREAD_SRCS = qthread_thread.cc
HPX_SRCS     = hpx.cc
RPC_SRCS     = rpc_broadcast.cc rpc_defs.cc rpc_global_shared_ptr.cc \
	rpc_main.cc rpc_server.cc rpc_server_mpi.cc \
	${QTHREAD_SRCS} ${HPX_SRCS}
MATRIX_SRCS  = algorithms.cc block_matrix.cc matrix.cc

BENCH_SRCS        = bench.cc ${RPC_SRCS}
DEMO_SRCS         = demo.cc ${RPC_SRCS}
MATBENCH_SRCS     = matbench.cc ${BLAS_SRCS} ${RPC_SRCS} ${MATRIX_SRCS}
MATTEST_SRCS      = mattest.cc ${BLAS_SRCS} ${RPC_SRCS} ${MATRIX_SRCS}
QTHREAD_TEST_SRCS = qthread_test.cc ${QTHREAD_SRCS}
HPX_TEST_SRCS     = hpx_test.cc

BENCH_OBJS        = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${BENCH_SRCS}}}}}
DEMO_OBJS         = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${DEMO_SRCS}}}}}
MATBENCH_OBJS     = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${MATBENCH_SRCS}}}}}
MATTEST_OBJS      = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${MATTEST_SRCS}}}}}
QTHREAD_TEST_OBJS = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${QTHREAD_TEST_SRCS}}}}}
HPX_TEST_OBJS     = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${HPX_TEST_SRCS}}}}}

BENCH_DEPS        = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${BENCH_SRCS}}}}}
DEMO_DEPS         = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${DEMO_SRCS}}}}}
MATBENCH_DEPS     = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${MATBENCH_SRCS}}}}}
MATTEST_DEPS      = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${MATTEST_SRCS}}}}}
QTHREAD_TEST_DEPS = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${QTHREAD_TEST_SRCS}}}}}
HPX_TEST_DEPS     = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${HPX_TEST_SRCS}}}}}

OBJS = ${BENCH_OBJS} ${DEMO_OBJS} ${MATBENCH_OBJS} ${MATTEST_OBJS} ${QTHREAD_TEST_OBJS} ${HPX_TEST_OBJS}
DEPS = ${BENCH_DEPS} ${DEMO_DEPS} ${MATBENCH_DEPS} ${MATTEST_DEPS} ${QTHREAD_TEST_DEPS} ${HPX_TEST_DEPS}



# Taken from <http://mad-scientist.net/make/autodep.html> as written
# by Paul D. Smith <psmith@gnu.org>, originally developed by Tom
# Tromey <tromey@cygnus.com>
PROCESS_DEPENDENCIES =					\
	sed -e 's/$@.tmp/$@/g' < $*.o.d > $*.d &&	\
	sed -e 's/\#.*//'				\
		-e 's/^[^:]*: *//'			\
		-e 's/ *\\$$//'				\
		-e '/^$$/ d'				\
		-e 's/$$/ :/' < $*.o.d >> $*.d &&	\
	rm -f $*.o.d



all: ${EXES}

bench: ${BENCH_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
demo: ${DEMO_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
matbench: ${MATBENCH_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
mattest: ${MATTEST_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
qthread_test: ${QTHREAD_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
hpx_test: ${HPX_TEST_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}

#%.o: %.c
#	${CC} -MD ${CPPFLAGS} ${CFLAGS} -o $@.tmp -c -emit-llvm $*.c
#	@${PROCESS_DEPENDENCIES}
#	@mv $@.tmp $@
#
#%.o: %.cc
#	${CXX} -MD ${CPPFLAGS} ${CXXFLAGS} -o $@.tmp -c -emit-llvm $*.cc
#	@${PROCESS_DEPENDENCIES}
#	@mv $@.tmp $@
#
#%.ll: %.f
#	${FC} ${FFLAGS} -o $@ -S -fplugin-arg-llvm33gcc48-emit-ir $*.f
#
#%.ll: %.f90
#	${FC} ${FFLAGS} -o $@ -S -fplugin-arg-llvm33gcc48-emit-ir $*.f90
#
#%.o: %.ll
#	llvm-as-mp-3.3 -o $@ $*.ll

%.o: %.c
	${CC} -MD ${CPPFLAGS} ${CFLAGS} -o $@.tmp -c $*.c
	@${PROCESS_DEPENDENCIES}
	@mv $@.tmp $@

%.o: %.cc
	${CXX} -MD ${CPPFLAGS} ${CXXFLAGS} -o $@.tmp -c $*.cc
	@${PROCESS_DEPENDENCIES}
	@mv $@.tmp $@

%.o: %.f
	${FC} ${FFLAGS} -o $@ -c $*.f

%.o: %.f90
	${FC} ${FFLAGS} -o $@ -c $*.f90

${OBJS}: Makefile.clang33.redshift

clean:
	${RM} ${DEPS} ${OBJS} ${OBJS:.o=.ll} ${EXES}

.PHONY: all clean

.SUFFIXES:

-include ${DEPS}
