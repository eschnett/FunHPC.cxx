# export BOOST_DIR=$HOME/boost_1_55_0
# export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$BOOST_DIR/lib
# # export BOOST_DIR=$HOME/boost_1_55_0
# # export HPX_DIR=$HOME/hpx-gcc48
# # export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$BOOST_DIR/lib:$HPX_DIR/lib/hpx

CC  = env OMPI_CC=gcc-mp-4.8      openmpicc
CXX = env OMPI_CXX=g++-mp-4.8     openmpic++
FC  = env OMPI_FC=gfortran-mp-4.8 openmpif90

# -DRPC_DISABLE_CALL_SHORTCUT
# -DRPC_DEBUG_MISSING_EXPORTS
# -I/Users/eschnett/hpx-gcc48/include/hpx/external -I/Users/eschnett/hpx-gcc48/include
# -DHPX_LIMIT=6
CPPFLAGS = \
	-I/Users/eschnett/boost_1_55_0/include \
	-DBOOST_MPI_HOMOGENEOUS \
	-I/Users/eschnett/qthread-1.10-gcc48/include \
	-DRPC_QTHREADS \
	-DBLAS
CFLAGS   = -g -std=c99   -march=native
CXXFLAGS = -g -std=c++11 -march=native
FFLAGS   = -g            -march=native

# -fsanitize=thread
# CFLAGS   += -fbounds-check -ftrapv -fsanitize=address -fstack-check -fstack-protector-all
# CXXFLAGS += -fbounds-check -ftrapv -fsanitize=address -fstack-check -fstack-protector-all
# FFLAGS   += -fbounds-check -ftrapv -fsanitize=address -fstack-check -fstack-protector-all

CFLAGS   += -Ofast
CXXFLAGS += -Ofast
FFLAGS   += -Ofast

# -L/Users/eschnett/hpx-gcc48/lib/hpx -Wl,-rpath,/Users/eschnett/hpx-gcc48/lib/hpx
LDFLAGS  = \
	-L/Users/eschnett/boost_1_55_0/lib \
	-L/Users/eschnett/qthread-1.10-gcc48/lib
# -lhpxd -lhpx_initd -lhpx_serializationd
# -lboost_date_time -lboost_filesystem -lboost_program_options -lboost_regex -lboost_serialization -lboost_system -lboost_thread -lboost_atomic -lboost_chrono -lboost_context
LIBS     = \
	-lboost_mpi -lboost_serialization \
	-lqthread \
	-lhwloc \
	-lgfortran



# hpx_test
EXES = bench demo hwloc matbench mattest qthread_test

BLAS_SRCS    = daxpy.f dcopy.f dgemm.f dgemv.f dnrm2.f dscal.f lsame.f xerbla.f
QTHREAD_SRCS = qthread_thread.cc
HPX_SRCS     = # hpx.cc
RPC_SRCS     = rpc_broadcast.cc rpc_defs.cc rpc_global_shared_ptr.cc \
	rpc_main.cc rpc_server.cc rpc_server_mpi.cc \
	${QTHREAD_SRCS} ${HPX_SRCS}
MATRIX_SRCS  = algorithms.cc block_matrix.cc matrix.cc

BENCH_SRCS        = bench.cc ${RPC_SRCS}
DEMO_SRCS         = demo.cc ${RPC_SRCS}
HPX_TEST_SRCS     = hpx_test.cc
HWLOC_SRCS	  = hwloc.cc ${RPC_SRCS}
MATBENCH_SRCS     = matbench.cc ${BLAS_SRCS} ${RPC_SRCS} ${MATRIX_SRCS}
MATTEST_SRCS      = mattest.cc ${BLAS_SRCS} ${RPC_SRCS} ${MATRIX_SRCS}
QTHREAD_TEST_SRCS = qthread_test.cc ${QTHREAD_SRCS}

BENCH_OBJS        = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${BENCH_SRCS}}}}}
DEMO_OBJS         = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${DEMO_SRCS}}}}}
HPX_TEST_OBJS     = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${HPX_TEST_SRCS}}}}}
HWLOC_OBJS        = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${HWLOC_SRCS}}}}}
MATBENCH_OBJS     = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${MATBENCH_SRCS}}}}}
MATTEST_OBJS      = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${MATTEST_SRCS}}}}}
QTHREAD_TEST_OBJS = ${patsubst %.c, %.o, ${patsubst %.cc, %.o, ${patsubst %.f, %.o,  ${patsubst %.f90, %.o, ${QTHREAD_TEST_SRCS}}}}}

BENCH_DEPS        = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${BENCH_SRCS}}}}}
DEMO_DEPS         = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${DEMO_SRCS}}}}}
HPX_TEST_DEPS     = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${HPX_TEST_SRCS}}}}}
HWLOC_DEPS        = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${HWLOC_SRCS}}}}}
MATBENCH_DEPS     = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${MATBENCH_SRCS}}}}}
MATTEST_DEPS      = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${MATTEST_SRCS}}}}}
QTHREAD_TEST_DEPS = ${patsubst %.c, %.d, ${patsubst %.cc, %.d, ${patsubst %.f, , ${patsubst %.f90, , ${QTHREAD_TEST_SRCS}}}}}

OBJS = ${BENCH_OBJS} ${DEMO_OBJS} ${HPX_TEST_OBJS} ${HWLOC_OBJS} ${MATBENCH_OBJS} ${MATTEST_OBJS} ${QTHREAD_TEST_OBJS}
DEPS = ${BENCH_DEPS} ${DEMO_DEPS} ${HPX_TEST_DEPS} ${HWLOC_DEPS} ${MATBENCH_DEPS} ${MATTEST_DEPS} ${QTHREAD_TEST_DEPS}



# Taken from <http://mad-scientist.net/make/autodep.html> as written
# by Paul D. Smith <psmith@gnu.org>, originally developed by Tom
# Tromey <tromey@cygnus.com>
PROCESS_DEPENDENCIES =					\
	sed -e 's/$@.tmp/$@/g' < $*.o.d > $*.d &&	\
	sed -e 's/\#.*//'				\
		-e 's/^[^:]*: *//'			\
		-e 's/ *\\$$//'				\
		-e '/^$$/ d'				\
		-e 's/$$/ :/' < $*.o.d >> $*.d &&	\
	rm -f $*.o.d



all: ${EXES}

bench: ${BENCH_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
demo: ${DEMO_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
hpx_test: ${HPX_TEST_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
hwloc: ${HWLOC_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
matbench: ${MATBENCH_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
mattest: ${MATTEST_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}
qthread_test: ${QTHREAD_TEST_OBJS}
	${CXX} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -o $@ $^ ${LIBS}

%.o: %.c
	${CC} -MD ${CPPFLAGS} ${CFLAGS} -o $@.tmp -c $*.c
	@${PROCESS_DEPENDENCIES}
	@mv $@.tmp $@

%.o: %.cc
	${CXX} -MD ${CPPFLAGS} ${CXXFLAGS} -o $@.tmp -c $*.cc
	@${PROCESS_DEPENDENCIES}
	@mv $@.tmp $@

%.o: %.f
	${FC} ${FFLAGS} -c $*.f

%.o: %.f90
	${FC} ${FFLAGS} -c $*.f90

${OBJS}: Makefile.gcc48.redshift

clean:
	${RM} ${DEPS} ${OBJS} ${EXES}

.PHONY: all clean

.SUFFIXES:

-include ${DEPS}
